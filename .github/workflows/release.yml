name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=TMDB Poster Generator
            org.opencontainers.image.description=Generate high-quality tilted grid wallpapers using TMDB API
            org.opencontainers.image.vendor=${{ github.repository_owner }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Update release with image info
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });
            
            const imageUrl = `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}`;
            const pullCommand = `docker pull ${imageUrl}`;
            const runCommand = `docker run --env-file .env ${imageUrl}`;
            
            const additionalBody = `
            
            ## üê≥ Docker Image
            
            This release is available as a Docker image:
            
            \`\`\`bash
            ${pullCommand}
            \`\`\`
            
            ### Quick Start
            
            \`\`\`bash
            # Pull the image
            ${pullCommand}
            
            # Create your .env file with TMDB_API_KEY and S3 configuration
            cp .env.example .env
            
            # Run the generator
            ${runCommand}
            \`\`\`
            
            ### Supported Architectures
            - linux/amd64
            - linux/arm64
            `;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: release.data.body + additionalBody
            });